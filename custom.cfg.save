# 基于 https://github.com/aguslr/multibootusb 进行工作。
# 我对其进行了若干修改，以便基于grub-mkstandalone实现不依赖于系统安装的grub进行工作。

# 对于不能直接使用iso进行安装的，则采用下面的方法：

#  基于（ddrescue / partclone.dd），比如：
#  Using the usb, instead of the hardisk, to write the iso onto the whole disk or certain partition.  
#  otherwise, maybe fail to install the operating system, say, for debian.

# freebsd
# debian

# 将文件cp / rsync 到特定格式的分区，比如:
# win10 （复制到 fat32 / ntfs 都是可以的。）

# 完全基于grub-mkstandalone工作,
# 下面的变量由 EFI/grub-mkstandalone/grub.cfg 设定,
# 而 EFI/grub-mkstandalone/grub.cfg 则由 refind 引导。
if [ -e "$__root/multibootusb.git/mbusb.cfg" ]; then
  source "$__root/multibootusb.git/mbusb.cfg"
fi



# 一些总结：


# 对于 debian的 硬盘安装方法，经常会失败，最可靠的方法就是将 iso 直接 dd 到 usb 整个盘或 usb 的某个分区的方法。
# 采用gpt分区表，以便支持大硬盘和更多的主分区。

# 但是对于各种live iso，则采用 iso dd 的方法到整个硬盘/usb
# 或硬盘/usb的某个主分区，也许都是可以的。
# 或者 采用 loopback 的方法也有可能。

# 所有这些方法的核心是 如果能够保证 iso 上的 相关配置被正确的调用--恰如刻盘的情况那样，就会有成功的可能。 
# 如果能够保证 相关配置被正确的调用的情况下， 用 chainloader 的方法，将会获得如刻盘一样的效果。 

# 关于 window 10 安装，也是非常简单的：
# 
# 在 硬盘或usb上，做一个ntfs分区，将 iso的内容cp上去，然后，以 efi 模式引导，该ntfs 分区自然就是
# 可以引导安装的。
# 
# 或者，进入 grub2 的命令行，用下面的方法也可以：
# 
# set root=(hdx,y)
# chainloader /efi/boot/bootx64.efi



# 从那个盘启动，那个盘就是 hd0.


# ====================================

# 12-
# 使用regexp模块：
# https://www.rmprepusb.com/tutorials/grub2_tutorial137
# 一些摘录：
# Scripting
# Loosely follows bash shell
# Useful functions and notes regular expressions

# function pathname { regexp -s 2:"$2" '^(\(.*\))?(/.*)$' "$1"; } # /_ISO/ubuntu 64.iso
# function devname { regexp -s "$2" '^(\(.*\)).*$' "$1"; } # (hd0,msdos2)
# function pathonly { regexp -s 2:"$2" '^(\(.*\))?(.*/)*' "$1"; } # /_ISO/
# function getext { regexp -s 3:"$2" '^(.*/)*(.*)\.(.*)$' "$1"; } # iso
# function getfname { regexp -s 2:"$2" '(.*)/+(.*)' "$1"; } # ubuntu 64.iso
# function gethdnum { regexp -s 2:"$2" '^(.*)hd(.*),' "$1"; } # 0
# function getdev { regexp -s 2:"$2" '^(.*)\((.*),' "$1"; } # hd0




# usage where $file = (hd0,msdos1)/_ISO/DIR/some file name with spaces.iso
# # set isopath to the fullpath without device name

# pathname "$file" isopath # make sure double-quotes around $file - this sets the isopath variable to /_ISO/DIR/some file name with spaces.iso

# 2: = get second match value, 3: = 3rd matched value
# ^ = start at beginning
# $ = up to end of line

# If looking for ( or ) then must precede with \

# (\(.*\))? = look for ( then anything then ) ? is zero or more of preceding match which is enclosed in ( )
# (/.*)$ = look for / followed by any chars up to end of line

# (.+/)* = look for 1 or more chars up to / any number of times
# (*+)\. = look for 0 or more chars followed by .
# (.+)$ = look for all chars till end of line


# e.g. regexp -s 2:"$2" '^(.*)\((.*),'

# ^ = start at beginning of line, look for any number of chars (.*), look for open parenthesis (, look for any number chars (.*), look for comma , - return 2nd match in parentheses as $2.


# testing regexp from the grub2 command line

# unset fred ; regexp -s 2:"fred" 'test regexp here' "$file" ; echo $fred
# # if filename does not contain ubuntu then abort
# if ! regexp '(.*)[uU][bB][uU][nN][tT][uU]' "$myfname" ; then continue ; fi
 

# https://lists.gnu.org/archive/html/grub-devel/2016-09/msg00018.html
# 下面这个文件中也有许多高级的用法：
# /media/werner/7ac9245c-3441-4dc2-a6e8-2267bea3c29f/grub/grub.git/docs/autoiso.cfg


# 13- probe
#https://www.gnu.org/software/grub/manual/grub/grub.html

#https://askubuntu.com/questions/228031/how-do-you-get-a-uuid-from-a-a-device-on-the-grub2-prompt

#Programmatically, this can be queried with the probe command, e.g.:

#probe --fs-uuid (hd0,gpt6)

#The result can also be assigned to a variable with --set:

#probe --set devuuid --fs-uuid (hd0,gpt6)
#echo $devuuid


#http://www.jinbuguo.com/linux/grub.cfg.html
#probe [--set var] --driver|--partmap|--fs|--fs-uuid|--label device
#    提取"device"设备的特定信息。如果使用了 --set 选项，则表示将提取的结果保存在"var"变量中，否则将提取的结果直接显示出来。



# 14- source / configfile
#configfile file

#    将"file"作为配置文件加载。如果"file"中定义了菜单项，那么立即显示一个包含它们的菜单。

#    [注意]"file"文件对环境变量所做的任何变更都将在从此文件返回后失效。

#source file

#    直接将"file"文件的内容插入到当前位置。与"configfile"不同，此命令既不切换执行环境，也不会显示一个新的菜单。



# 15-

#https://www.gnu.org/software/grub/manual/grub/grub.html#cmp

#16.3.65 search

#Command: search [--file|--label|--fs-uuid] [--set [var]] [--no-floppy] name

#    Search devices by file (-f, --file), filesystem label (-l, --label), or filesystem UUID (-u, --fs-uuid).

#    If the --set option is used, the first device found is set as the value of environment variable var. The default variable is ‘root’.

#    The --no-floppy option prevents searching floppy devices, which can be slow.

#    The ‘search.file’, ‘search.fs_label’, and ‘search.fs_uuid’ commands are aliases for ‘search --file’, ‘search --label’, and ‘search --fs-uuid’ respectively. 

# 关于 --hint

#grub.git$ grep -r -- '--hint' *

#可以观察源码发现相关的说明：
#grub.git$ cat grub-core/commands/search_wrap.c


#https://unix.stackexchange.com/questions/115555/what-does-the-hint-option-in-grub2s-search-command-do/126601#126601

#This is not described in the GRUB Manual but there is documentation to be found in GRUB itself (search --help on the GRUB shell):

#--hint
#    First try the device HINT.
#    If HINT ends in comma, also try subpartitions

#--hint-ieee1275
#    First try the device HINT if currently running on IEEE1275.
#    If HINT ends in comma, also try subpartitions

#--hint-bios
#    First try the device HINT if currently running on BIOS.
#    If HINT ends in comma, also try subpartitions

#--hint-baremetal
#    First try the device HINT if direct hardware access is supported.
#    If HINT ends in comma, also try subpartitions

#--hint-efi
#    First try the device HINT if currently running on EFI.
#    If HINT ends in comma, also try subpartitions

#--hint-arc
#    First try the device HINT if currently running on ARC.
#    If HINT ends in comma, also try subpartitions


# 这里给出的 search --file 例子，

# 要支持 通配符，都需要先加载 regexp 模块。 


#http://blog.sciencenet.cn/blog-2353794-881814.html
#http://www.jinbuguo.com/linux/grub.cfg.html

#启动某个引导文件：
#menuentry "启动 G4D"{
#search --file /grldr --set=root
#insmod ntldr
#ntldr /grldr
#}




#https://www.gnu.org/software/grub/manual/grub/grub.html#Multi_002dboot-manual-config
#https://www.gnu.org/software/grub/manual/grub/grub.html#Embedded-configuration





#https://www.gnu.org/software/grub/manual/grub/grub.html#test
#-d file

#    file exists and is a directory 
#-e file

#    file exists 
#-f file

#    file exists and is not a directory 
#-s file

#    file exists and has a size greater than zero 
#-n string

#    the length of string is nonzero 
#string

#    string is equivalent to -n string 
#-z string

#    the length of string is zero 


# 
#   16.3.57 probe
# 
# Command: probe [--set var] --driver|--partmap|--fs|--fs-uuid|--label device
# 
#     Retrieve device information. If option --set is given, assign result to variable var, otherwise print information on the screen.  


#https://www.gnu.org/software/grub/manual/grub/grub.html#chainloader

#16.3.10 chainloader

#Command: chainloader [--force] file

#    Load file as a chain-loader. Like any other file loaded by the filesystem code, it can use the blocklist notation (see Block list syntax) to grab the first sector of the current partition with ‘+1’. If you specify the option --force, then load file forcibly, whether it has a correct signature or not. This is required when you want to load a defective boot loader, such as SCO UnixWare 7.1. 







